pwd - current path
git help - for helping

git config --list - list configurations

git init - init project
git add . - add all files(to staged)
git add second.txt - specific file name add(to staged)
git commit -m "Here commit message" - git commit with message
git log - view commit logs
git log --author="akbars95" - view commits specific author
git log -1(commit number) = get latest commit numbers
git status - view status files
clear - for clear cmd window
git reset . - Unstaged files
git diff - view differences
git diff --staged - view differences files, which in the stage area
rm third.txt - delete specific file
git mv description.txt descr/description.txt - moved file
git help commit - help commit(open in ther browser)
git commit -am"Message" - at once committed without git add command
git commit --amend -m 'Message' - amend commit
git checkout -- "git commands.txt"(file name)(git checkout -- <target>) - to discard changes in working directory
git checkout HEAD -- <filename> - discard filename

REMOTE
git remote add origin(remote name) https://github.com/akbars95/oracle_pl_sql.git(link to repository)

git remote - get remote name
git push -u origin(remote name) study(branch name)


ssh-keygen -t rsa - generate private/public rsa key pair(c:/users/<username>/.ssh folder)

git clone zat@EN32211 MINGW64 /d/work/github
$ git clone https://github.com/akbars95/oracle_pl_sql.git - clone via http(s)

git fetch --all - fetch all
git pull origin master - pull remote changes from other people of your command
git pull - pull current branch changes
git push -f <remote> <branch> - force push
git push -u origin <remote> <branch> --force - force push
git show <commit_hash> - show commit inside

BRANCH
git branch <name_new_branch> - create new branch
git branch - show all branches
git checkout <branch_name> - switch branch
git merge <branch_name> - merge current branch to <branch_name>
git branch -d <branch_name> - delete <branch_name>

STASH
git stash - add your changes to the stash
git stash list - see stash
git stash pop - delete from stash and move data to the unstaged

git branch -a - show all branches

RESET
git reset --soft e14b9cf4dcc90b8bf2f01335012cbb1b574d0085(commit hash)
git reset --mixed e14b9cf4dcc90b8bf2f01335012cbb1b574d0085(commit hash)
git reset --hard e14b9cf4dcc90b8bf2f01335012cbb1b574d0085(commit hash)

TAG
git tag -a '<tagName>' -m '<Message>' - crate local tag
git push origin tag <tagName> - pushed tag to the remote
git tag -l - view list tags
git show <tagName> - show info about tag
git tag - show all tags
git tag -d <tagName> - delete <tagName> locally
git push origin :<tagName>  - delete remote tag